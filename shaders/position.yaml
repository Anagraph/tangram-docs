cameras:
    camera1:
        type: isometric

lights:
    light1:
        type: directional
        direction: [0, 1, -.5]
        diffuse: .5
        ambient: .5
    light2:
        type: point
        position: [0, 0, 100]
        origin: ground
        ambient: .3
        diffuse: .3

styles:
    buildings:
        extends: polygons
        animated: true
        texcoords: true
        material:
            ambient: 1.0
            diffuse: 1.0
        shaders:
            blocks:
                globals: |
                    vec3 random3(vec3 c) {
                        float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));
                        vec3 r;
                        r.z = fract(512.0*j);
                        j *= .125;
                        r.x = fract(512.0*j);
                        j *= .125;
                        r.y = fract(512.0*j);
                        return r-0.5;
                    }

                    const float F3 =  0.3333333;
                    const float G3 =  0.1666667;
                    float simplexNoise(vec3 p) {

                        vec3 s = floor(p + dot(p, vec3(F3)));
                        vec3 x = p - s + dot(s, vec3(G3));

                        vec3 e = step(vec3(0.0), x - x.yzx);
                        vec3 i1 = e*(1.0 - e.zxy);
                        vec3 i2 = 1.0 - e.zxy*(1.0 - e);

                        vec3 x1 = x - i1 + G3;
                        vec3 x2 = x - i2 + 2.0*G3;
                        vec3 x3 = x - 1.0 + 3.0*G3;

                        vec4 w, d;

                        w.x = dot(x, x);
                        w.y = dot(x1, x1);
                        w.z = dot(x2, x2);
                        w.w = dot(x3, x3);

                        w = max(0.6 - w, 0.0);

                        d.x = dot(random3(s), x);
                        d.y = dot(random3(s + i1), x1);
                        d.z = dot(random3(s + i2), x2);
                        d.w = dot(random3(s + 1.0), x3);

                        w *= w;
                        w *= w;
                        d *= w;

                        return dot(d, vec4(52.0));
                    }

                    vec3 normalNoise(vec3 pos, float _speed){
                        vec2 v1 = pos.yz;
                        vec2 v2 = pos.xz;
                        vec2 v3 = pos.xy;
                        v1 /= 1.0;
                        v2 /= 0.62;
                        v3 /= 0.83;
                        float n = u_time*_speed;
                        float nr = (simplexNoise(vec3(v1, n)) + simplexNoise(vec3(v2, n)) + simplexNoise(vec3(v3, n))) / 6.0 + 0.5;
                        n = u_time * _speed + 1000.0;
                        float ng = (simplexNoise(vec3(v1, n)) + simplexNoise(vec3(v2, n)) + simplexNoise(vec3(v3, n))) / 6.0 + 0.5;
                        return vec3(nr,ng,0.5);
                    }
                position: |
                    position.xyz += normalNoise(v_world_position.xyz*0.01,1.)*100.;
                    
sources:
    osm:
        type: MVTSource
        url:  http://vector.mapzen.com/osm/all/{z}/{x}/{y}.mapbox

layers:
    earth:
        data:
            source: osm
            layer: earth
        style:
            order: 0
            color: '#ddeeee'
    landuse:
        data:
            source: osm
            layer: landuse
        style:
            order: 1
            color: '#aaffaa'
            interactive: true

    water:
        data:
            source: osm
            layer: water
        style:
            order: 2
            color: '#88bbee'

    roads:
        data:
            source: osm
            layer: roads
        style:
            order: 3
            color: gray    
            width: 8
        highway:
            filter:
                kind: highway
            style:
                color: '#cc6666'
                width: 12
                outline:
                    color: grey
                    width: 3
        tunnel:
            filter:
                is_tunnel: yes
            style:
                color: tan
            rail:
                filter:
                    kind: rail
                style:
                    width: 0
        minor_road:
            filter:
                kind: minor_road
            style:
                color: lightgrey
                width: 5
        path:
            filter:
                kind: path
            style:
                color: [0.8, 0.8, 0.8]
                width: 3
        rail:
            filter:
                kind: rail
                is_tunnel: no
            style:
                color: pink
                width: 3
    buildings:
        data:
            source: osm
            layer: buildings
        style:
            name: buildings
            order: 4
            color: gray
            extrude: true

