cameras:
    camera1:
        type: perspective
        focal_length: [[16, 2], [20, 6]] # pairs of [zoom, focal len]
        vanishing_point: [-250, -250] # relative to center of screen, in pixels

lights:
    light1:
        type: directional
        direction: [0, 1, -.5]
        diffuse: .5
        ambient: .2
    light2:
        type: point
        position: [0, 0, 500px]
        origin: ground
        ambient: .3
        diffuse: .5
        specular: .2

styles:
    rock:
        animated: true
        extends: polygons
        material:
            normal:
                texture: procedural/rock.jpg
                mapping: uv
            ambient: 0.8
            diffuse: 1
            specular: 0
        shaders:
            transforms:
                globals: |
                    mat2 rotate2d(float _angle){
                        return mat2(cos(_angle),-sin(_angle),
                                    sin(_angle),cos(_angle));
                    }

                    float random (in vec2 _st) { 
                        return fract(sin(dot(_st.xy,
                                             vec2(12.9898,78.233)))* 
                            43758.5453123);
                    }

                    float getBrightness(in vec3 _rgb){
                        return 0.212655 * _rgb.r + 0.715158 * _rgb.g + 0.072187 * _rgb.b;
                    }

                    float getHatch(in vec2 _pos, float _angle, float _brigtness){
                        float scale = 20.0;
                        _pos *= scale;
                        _pos = rotate2d( _angle ) * _pos;
                        return 1.0-smoothstep(-1.+_brigtness*2.0,1.,abs(sin(_pos.x*3.1415)));
                    }
                normal:
                    normal = v_normal;
                color: |
                    vec3 pos = v_world_position.xyz*0.01;

                    if ( v_color.rgb == vec3(0.0) ) {
                        vec3 grid = step(vec3(0.01), fract(pos*1.0));
                        vec3 gridSmall = step(vec3(0.025), fract(pos*10.0));
                        color.rgb = (1.0-(vec3(grid.x*grid.y*grid.z)*vec3(gridSmall.x*gridSmall.y*gridSmall.z)))*vec3(0.276,0.963,0.118);

                    } else {
                        float pattern = getHatch( u_time*0.1+v_texcoord.xy*0.5, 3.1415*0.5, 0.5);
                        color.rgb = vec3( pattern*vec3(0.276,0.963,0.118) );
                    }
                    


sources:
    osm:
        type: GeoJSONTileSource
        url:  http://vector.mapzen.com/osm/all/{z}/{x}/{y}.json

layers:
    earth:
        geometry:
            source: osm
            filter: earth
        style:
            order: 0
            color: '#ddeeee'
    landuse:
        geometry:
            source: osm
            filter: landuse
        style:
            order: 1
            color: '#aaffaa'
            interactive: true

    water:
        geometry:
            source: osm
            filter: water
        style:
            order: 2
            color: '#88bbee'

    roads:
        geometry:
            source: osm
            filter: roads
        style:
            order: 3
            color: gray    
            width: 8
        highway:
            filter:
                kind: highway
            style:
                color: '#cc6666'
                width: 12
                outline:
                    color: grey
                    width: 3
        tunnel:
            filter:
                is_tunnel: yes
            style:
                color: tan
            rail:
                filter:
                    kind: rail
                style:
                    width: 0
        minor_road:
            filter:
                kind: minor_road
            style:
                color: lightgrey
                width: 5
        path:
            filter:
                kind: path
            style:
                color: [0.8, 0.8, 0.8]
                width: 3
        rail:
            filter:
                kind: rail
                is_tunnel: no
            style:
                color: pink
                width: 3
    
    buildings:
        geometry:
            source: osm
            filter: buildings
        style:
            name: rock
            order: 4
            color: [0, 0, 0]
            outline:
                color: [1, 1, 1]
                width: 2px
                tile_edges: true
            extrude: true